Archive member included to satisfy reference by file (symbol)

/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o (exit)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
                              new.o (__do_copy_data)
/usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                              new.o (__do_clear_bss)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                              new.o (__itoa_ncheck)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(itoa_ncheck.o) (__utoa_common)
/usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(strrev.o)
                              /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o) (strrev)

Memory Configuration

Name             Origin             Length             Attributes
text             0x0000000000000000 0x0000000000002000 xr
data             0x0000000000800060 0x000000000000ffa0 rw !x
eeprom           0x0000000000810000 0x0000000000010000 rw !x
fuse             0x0000000000820000 0x0000000000000002 rw !x
lock             0x0000000000830000 0x0000000000000400 rw !x
signature        0x0000000000840000 0x0000000000000400 rw !x
user_signatures  0x0000000000850000 0x0000000000000400 rw !x
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
LOAD new.o
START GROUP
LOAD /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libm.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a
LOAD /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libatmega8.a
END GROUP
                0x0000000000000000                __TEXT_REGION_ORIGIN__ = DEFINED (__TEXT_REGION_ORIGIN__)?__TEXT_REGION_ORIGIN__:0x0
                0x0000000000800060                __DATA_REGION_ORIGIN__ = DEFINED (__DATA_REGION_ORIGIN__)?__DATA_REGION_ORIGIN__:0x800060
                0x0000000000002000                __TEXT_REGION_LENGTH__ = DEFINED (__TEXT_REGION_LENGTH__)?__TEXT_REGION_LENGTH__:0x2000
                0x000000000000ffa0                __DATA_REGION_LENGTH__ = DEFINED (__DATA_REGION_LENGTH__)?__DATA_REGION_LENGTH__:0xffa0
                0x0000000000010000                __EEPROM_REGION_LENGTH__ = DEFINED (__EEPROM_REGION_LENGTH__)?__EEPROM_REGION_LENGTH__:0x10000
                [0x0000000000000002]                __FUSE_REGION_LENGTH__ = DEFINED (__FUSE_REGION_LENGTH__)?__FUSE_REGION_LENGTH__:0x400
                0x0000000000000400                __LOCK_REGION_LENGTH__ = DEFINED (__LOCK_REGION_LENGTH__)?__LOCK_REGION_LENGTH__:0x400
                0x0000000000000400                __SIGNATURE_REGION_LENGTH__ = DEFINED (__SIGNATURE_REGION_LENGTH__)?__SIGNATURE_REGION_LENGTH__:0x400
                0x0000000000000400                __USER_SIGNATURE_REGION_LENGTH__ = DEFINED (__USER_SIGNATURE_REGION_LENGTH__)?__USER_SIGNATURE_REGION_LENGTH__:0x400

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x0000000000000000      0x436
 *(.vectors)
 .vectors       0x0000000000000000       0x26 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000000                __vectors
                0x0000000000000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
                0x0000000000000026                . = ALIGN (0x2)
                0x0000000000000026                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x0000000000000026        0x0 linker stubs
 *(.trampolines*)
                0x0000000000000026                __trampolines_end = .
 *libprintf_flt.a:*(.progmem.data)
 *libc.a:*(.progmem.data)
 *(.progmem*)
                0x0000000000000026                . = ALIGN (0x2)
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x0000000000000026                __ctors_start = .
 *(.ctors)
                0x0000000000000026                __ctors_end = .
                0x0000000000000026                __dtors_start = .
 *(.dtors)
                0x0000000000000026                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x0000000000000026        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x0000000000000026                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x0000000000000026        0xc /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x0000000000000032       0x16 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
                0x0000000000000032                __do_copy_data
 .init4         0x0000000000000048       0x10 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                0x0000000000000048                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x0000000000000058        0x4 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 *(.init9)
 *(.text)
 .text          0x000000000000005c        0x2 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
                0x000000000000005c                __vector_1
                0x000000000000005c                __vector_12
                0x000000000000005c                __bad_interrupt
                0x000000000000005c                __vector_6
                0x000000000000005c                __vector_3
                0x000000000000005c                __vector_11
                0x000000000000005c                __vector_13
                0x000000000000005c                __vector_17
                0x000000000000005c                __vector_7
                0x000000000000005c                __vector_5
                0x000000000000005c                __vector_4
                0x000000000000005c                __vector_9
                0x000000000000005c                __vector_2
                0x000000000000005c                __vector_15
                0x000000000000005c                __vector_8
                0x000000000000005c                __vector_14
                0x000000000000005c                __vector_10
                0x000000000000005c                __vector_16
                0x000000000000005c                __vector_18
 .text          0x000000000000005e      0x318 new.o
                0x000000000000005e                putq
                0x0000000000000094                getq
                0x00000000000000c2                outchr
                0x00000000000000ca                outs
                0x00000000000000e0                outhex
                0x0000000000000128                crlf
                0x0000000000000130                onescan
                0x000000000000026e                scan
 .text          0x0000000000000376        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text          0x0000000000000376        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text          0x0000000000000376        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text          0x0000000000000376        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .text          0x0000000000000376        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .text          0x0000000000000376        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000376                . = ALIGN (0x2)
 *(.text.*)
 .text.startup  0x0000000000000376       0x56 new.o
                0x0000000000000376                main
 .text.libgcc.mul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.div
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc   0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.prologue
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.builtins
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fmul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.fixed
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .text.libgcc.mul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.div
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc   0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.prologue
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.builtins
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fmul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.fixed
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .text.libgcc.mul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.div
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc   0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.prologue
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.builtins
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fmul
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.libgcc.fixed
                0x00000000000003cc        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .text.avr-libc
                0x00000000000003cc       0x14 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                0x00000000000003cc                __itoa_ncheck
 .text.avr-libc
                0x00000000000003e0       0x32 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                0x00000000000003e0                __utoa_ncheck
                0x00000000000003e2                __utoa_common
 .text.avr-libc
                0x0000000000000412       0x20 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(strrev.o)
                0x0000000000000412                strrev
                0x0000000000000432                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x0000000000000432        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                0x0000000000000432                exit
                0x0000000000000432                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x0000000000000432        0x4 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 *(.fini0)
                0x0000000000000436                _etext = .

.data           0x0000000000800060      0x10a load address 0x0000000000000436
                0x0000000000800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .data          0x0000000000800060        0x0 new.o
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .data          0x0000000000800060        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.data*)
 *(.gnu.linkonce.d*)
 *(.rodata)
 .rodata        0x0000000000800060      0x100 new.o
 *(.rodata*)
 .rodata.str1.1
                0x0000000000800160        0x9 new.o
 *(.gnu.linkonce.r*)
                0x000000000080016a                . = ALIGN (0x2)
 *fill*         0x0000000000800169        0x1 
                0x000000000080016a                _edata = .
                0x000000000080016a                PROVIDE (__data_end, .)

.bss            0x000000000080016a       0x3b
                0x000000000080016a                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x000000000080016a        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
 .bss           0x000000000080016a       0x3b new.o
 .bss           0x00000000008001a5        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
 .bss           0x00000000008001a5        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
 .bss           0x00000000008001a5        0x0 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
 .bss           0x00000000008001a5        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
 .bss           0x00000000008001a5        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
 .bss           0x00000000008001a5        0x0 /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(strrev.o)
 *(.bss*)
 *(COMMON)
                0x00000000008001a5                PROVIDE (__bss_end, .)
                0x0000000000000436                __data_load_start = LOADADDR (.data)
                0x0000000000000540                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00000000008001a5        0x0
                [!provide]                        PROVIDE (__noinit_start, .)
 *(.noinit*)
                [!provide]                        PROVIDE (__noinit_end, .)
                0x00000000008001a5                _end = .
                [!provide]                        PROVIDE (__heap_start, .)

.eeprom         0x0000000000810000        0x0
 *(.eeprom*)
                0x0000000000810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.user_signatures
 *(.user_signatures*)

.stab           0x0000000000000000      0xe4c
 *(.stab)
 .stab          0x0000000000000000      0xe4c new.o

.stabstr        0x0000000000000000      0xf3b
 *(.stabstr)
 .stabstr       0x0000000000000000      0xf3b new.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment        0x0000000000000000       0x11
 *(.comment)
 .comment       0x0000000000000000       0x11 new.o
                                         0x12 (size before relaxing)

.note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c
 .note.gnu.avr.deviceinfo
                0x0000000000000000       0x3c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.note.gnu.build-id
 *(.note.gnu.build-id)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info     0x0000000000000000      0x48c
 *(.debug_info .gnu.linkonce.wi.*)
 .debug_info    0x0000000000000000      0x48c /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_abbrev   0x0000000000000000      0x44e
 *(.debug_abbrev)
 .debug_abbrev  0x0000000000000000      0x44e /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_line     0x0000000000000000       0x1a
 *(.debug_line .debug_line.* .debug_line_end)
 .debug_line    0x0000000000000000       0x1a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_frame
 *(.debug_frame)

.debug_str      0x0000000000000000      0x17a
 *(.debug_str)
 .debug_str     0x0000000000000000      0x17a /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)

.debug_weaknames
 *(.debug_weaknames)

.debug_funcnames
 *(.debug_funcnames)

.debug_typenames
 *(.debug_typenames)

.debug_varnames
 *(.debug_varnames)

.debug_pubtypes
 *(.debug_pubtypes)

.debug_ranges
 *(.debug_ranges)

.debug_macro
 *(.debug_macro)
OUTPUT(new.elf elf32-avr)
LOAD linker stubs

Cross Reference Table

Symbol                                            File
__FUSE_REGION_LENGTH__                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__bad_interrupt                                   /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__bss_end                                         /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
__bss_start                                       /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
__data_end                                        /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
__data_load_start                                 /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
__data_start                                      /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
__do_clear_bss                                    /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_clear_bss.o)
                                                  new.o
__do_copy_data                                    /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_copy_data.o)
                                                  new.o
__heap_end                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__init                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__itoa_ncheck                                     /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
                                                  new.o
__stack                                           /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__utoa_common                                     /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(itoa_ncheck.o)
__utoa_ncheck                                     /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
__vector_1                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_10                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_11                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_12                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_13                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_14                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_15                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_16                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_17                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_18                                       /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_2                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_3                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_4                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_5                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_6                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_7                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_8                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_9                                        /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vector_default                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
__vectors                                         /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
_exit                                             /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
crlf                                              new.o
exit                                              /usr/lib/gcc/avr/5.4.0/avr4/libgcc.a(_exit.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
getq                                              new.o
main                                              new.o
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/crtatmega8.o
onescan                                           new.o
outchr                                            new.o
outhex                                            new.o
outs                                              new.o
putq                                              new.o
scan                                              new.o
strrev                                            /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(strrev.o)
                                                  /usr/lib/gcc/avr/5.4.0/../../../avr/lib/avr4/libc.a(utoa_ncheck.o)
